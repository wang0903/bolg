export const data = JSON.parse("{\"key\":\"v-11cd760c\",\"path\":\"/demo/2.html\",\"title\":\"将数据求和存入数组中\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"pen-to-square\",\"date\":\"2024-01-19T00:00:00.000Z\",\"category\":[\"Java数据更新\"],\"tag\":[\"java\",\"更新数据\"],\"star\":true,\"sticky\":true,\"description\":\"将数据求和存入数组中 将数据求和存入数组中，在返回给前端整个代码和步骤: 1、创建接口 /** * @return 根据缺陷名称、时间、类型查出数据列表 * @param flawRespVO * @return */ ModuleProcessingFlawResultVO getModuleProcessingFlawListByName(ModuleProcessingFlawRespVO flawRespVO);\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/demo/2.html\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"将数据求和存入数组中\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"将数据求和存入数组中 将数据求和存入数组中，在返回给前端整个代码和步骤: 1、创建接口 /** * @return 根据缺陷名称、时间、类型查出数据列表 * @param flawRespVO * @return */ ModuleProcessingFlawResultVO getModuleProcessingFlawListByName(ModuleProcessingFlawRespVO flawRespVO);\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"蜉蝣\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"java\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"更新数据\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2024-01-19T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"将数据求和存入数组中\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2024-01-19T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"蜉蝣\\\",\\\"url\\\":\\\"https://mister-hope.com\\\"}]}\"]]},\"headers\":[{\"level\":3,\"title\":\"1、创建接口\",\"slug\":\"_1、创建接口\",\"link\":\"#_1、创建接口\",\"children\":[]},{\"level\":3,\"title\":\"2、创建一个新的自定义类，用于存储缺陷数据和总重量\",\"slug\":\"_2、创建一个新的自定义类-用于存储缺陷数据和总重量\",\"link\":\"#_2、创建一个新的自定义类-用于存储缺陷数据和总重量\",\"children\":[]},{\"level\":3,\"title\":\"3、将数据存入数组\",\"slug\":\"_3、将数据存入数组\",\"link\":\"#_3、将数据存入数组\",\"children\":[]},{\"level\":3,\"title\":\"4、实现接口(接口实现根据时间类型，去数据库查询这个时间段的数据，在将数据的总重量字段求和)\",\"slug\":\"_4、实现接口-接口实现根据时间类型-去数据库查询这个时间段的数据-在将数据的总重量字段求和\",\"link\":\"#_4、实现接口-接口实现根据时间类型-去数据库查询这个时间段的数据-在将数据的总重量字段求和\",\"children\":[]},{\"level\":3,\"title\":\"5、接口代码\",\"slug\":\"_5、接口代码\",\"link\":\"#_5、接口代码\",\"children\":[]}],\"readingTime\":{\"minutes\":2.84,\"words\":853},\"filePathRelative\":\"demo/2.md\",\"localizedDate\":\"2024年1月19日\",\"excerpt\":\"<h1> 将数据求和存入数组中</h1>\\n<h4> 将数据求和存入数组中，在返回给前端整个代码和步骤:</h4>\\n<h3> 1、创建接口</h3>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code>  <span class=\\\"token doc-comment comment\\\">/**\\n     * <span class=\\\"token keyword\\\">@return</span> 根据缺陷名称、时间、类型查出数据列表\\n     * <span class=\\\"token keyword\\\">@param</span> <span class=\\\"token parameter\\\">flawRespVO</span>\\n     * <span class=\\\"token keyword\\\">@return</span>\\n     */</span>\\n    <span class=\\\"token class-name\\\">ModuleProcessingFlawResultVO</span> <span class=\\\"token function\\\">getModuleProcessingFlawListByName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">ModuleProcessingFlawRespVO</span> flawRespVO<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
