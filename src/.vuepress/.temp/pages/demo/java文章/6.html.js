export const data = JSON.parse("{\"key\":\"v-e5d05ee0\",\"path\":\"/demo/java%E6%96%87%E7%AB%A0/6.html\",\"title\":\"查询ID与批号同时存在才能更新数据\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"pen-to-square\",\"date\":\"2024-01-19T00:00:00.000Z\",\"category\":[\"Java数据更新\"],\"tag\":[\"java\",\"更新数据\"],\"star\":true,\"sticky\":true,\"description\":\"查询ID与批号同时存在才能更新数据 @Override public void updateModuleInspection(ModuleInspectionUpdateReqVO updateReqVO) { Long id = updateReqVO.getId(); Long moduleId = moduleInspectionMapper.selectCount(new QueryWrapper&lt;ModuleInspectionDO&gt;().lambda() .eq(ModuleInspectionDO::getId, updateReqVO.getId()) .and(wrapper -&gt; wrapper.eq(ModuleInspectionDO::getBatchNumber, updateReqVO.getBatchNumber()))); if (moduleId &gt; 0) { //检验是否存在 validateModuleInspectionExists(updateReqVO.getId()); //更新 ModuleInspectionDO updateObj = ModuleInspectionConvert.INSTANCE.convert(updateReqVO); // 执行更新操作 moduleInspectionMapper.updateById(updateObj); ModuleInspectionDO moduleInspectionDO = moduleInspectionMapper.selectById(id); String type1 = moduleInspectionDO.getType1(); String type2 = moduleInspectionDO.getType2(); // TOD 当type1和type2不为null且不等于未检，且两个字段的值相等时，将type4字段的值修改为1 if (\\\"已检\\\".equals(type1) &amp;&amp; type1.equals(type2)) { // TOD 将type4设置为1 moduleInspectionDO.setType4(1); // 更新数据库中的记录 moduleInspectionMapper.updateType4(moduleInspectionDO.getId(), 1); } }else { throw exception(MODULE_DETECTION_BATCH_EXISTSSL); } }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/demo/java%E6%96%87%E7%AB%A0/6.html\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"查询ID与批号同时存在才能更新数据\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"查询ID与批号同时存在才能更新数据 @Override public void updateModuleInspection(ModuleInspectionUpdateReqVO updateReqVO) { Long id = updateReqVO.getId(); Long moduleId = moduleInspectionMapper.selectCount(new QueryWrapper&lt;ModuleInspectionDO&gt;().lambda() .eq(ModuleInspectionDO::getId, updateReqVO.getId()) .and(wrapper -&gt; wrapper.eq(ModuleInspectionDO::getBatchNumber, updateReqVO.getBatchNumber()))); if (moduleId &gt; 0) { //检验是否存在 validateModuleInspectionExists(updateReqVO.getId()); //更新 ModuleInspectionDO updateObj = ModuleInspectionConvert.INSTANCE.convert(updateReqVO); // 执行更新操作 moduleInspectionMapper.updateById(updateObj); ModuleInspectionDO moduleInspectionDO = moduleInspectionMapper.selectById(id); String type1 = moduleInspectionDO.getType1(); String type2 = moduleInspectionDO.getType2(); // TOD 当type1和type2不为null且不等于未检，且两个字段的值相等时，将type4字段的值修改为1 if (\\\"已检\\\".equals(type1) &amp;&amp; type1.equals(type2)) { // TOD 将type4设置为1 moduleInspectionDO.setType4(1); // 更新数据库中的记录 moduleInspectionMapper.updateType4(moduleInspectionDO.getId(), 1); } }else { throw exception(MODULE_DETECTION_BATCH_EXISTSSL); } }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"写代码的小辣椒\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"java\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"更新数据\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2024-01-19T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"查询ID与批号同时存在才能更新数据\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2024-01-19T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"写代码的小辣椒\\\",\\\"url\\\":\\\"https://mister-hope.com\\\"}]}\"]]},\"headers\":[],\"readingTime\":{\"minutes\":0.59,\"words\":176},\"filePathRelative\":\"demo/java文章/6.md\",\"localizedDate\":\"2024年1月19日\",\"excerpt\":\"<h1> 查询ID与批号同时存在才能更新数据</h1>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code>    <span class=\\\"token annotation punctuation\\\">@Override</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">updateModuleInspection</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">ModuleInspectionUpdateReqVO</span> updateReqVO<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n        <span class=\\\"token class-name\\\">Long</span> id <span class=\\\"token operator\\\">=</span> updateReqVO<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token class-name\\\">Long</span> moduleId <span class=\\\"token operator\\\">=</span> moduleInspectionMapper<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">selectCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">QueryWrapper</span><span class=\\\"token generics\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ModuleInspectionDO</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">lambda</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">eq</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">ModuleInspectionDO</span><span class=\\\"token operator\\\">::</span><span class=\\\"token function\\\">getId</span><span class=\\\"token punctuation\\\">,</span> updateReqVO<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">and</span><span class=\\\"token punctuation\\\">(</span>wrapper <span class=\\\"token operator\\\">-&gt;</span> wrapper<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">eq</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">ModuleInspectionDO</span><span class=\\\"token operator\\\">::</span><span class=\\\"token function\\\">getBatchNumber</span><span class=\\\"token punctuation\\\">,</span> updateReqVO<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getBatchNumber</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>moduleId <span class=\\\"token operator\\\">&gt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">//检验是否存在</span>\\n            <span class=\\\"token function\\\">validateModuleInspectionExists</span><span class=\\\"token punctuation\\\">(</span>updateReqVO<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token comment\\\">//更新</span>\\n            <span class=\\\"token class-name\\\">ModuleInspectionDO</span> updateObj <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ModuleInspectionConvert</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">INSTANCE</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">convert</span><span class=\\\"token punctuation\\\">(</span>updateReqVO<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token comment\\\">// 执行更新操作</span>\\n            moduleInspectionMapper<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">updateById</span><span class=\\\"token punctuation\\\">(</span>updateObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token class-name\\\">ModuleInspectionDO</span> moduleInspectionDO <span class=\\\"token operator\\\">=</span> moduleInspectionMapper<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">selectById</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">String</span> type1 <span class=\\\"token operator\\\">=</span> moduleInspectionDO<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getType1</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">String</span> type2 <span class=\\\"token operator\\\">=</span> moduleInspectionDO<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getType2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token comment\\\">// TOD 当type1和type2不为null且不等于未检，且两个字段的值相等时，将type4字段的值修改为1</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"已检\\\"</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">equals</span><span class=\\\"token punctuation\\\">(</span>type1<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> type1<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">equals</span><span class=\\\"token punctuation\\\">(</span>type2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token comment\\\">// TOD 将type4设置为1</span>\\n                moduleInspectionDO<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setType4</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token comment\\\">// 更新数据库中的记录</span>\\n                moduleInspectionMapper<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">updateType4</span><span class=\\\"token punctuation\\\">(</span>moduleInspectionDO<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token function\\\">exception</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">MODULE_DETECTION_BATCH_EXISTSSL</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n\\n    <span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
