export const data = JSON.parse("{\"key\":\"v-b37a6e72\",\"path\":\"/posts/%E8%BD%AF%E4%BB%B6%E9%83%A8%E7%BD%B2/wg-easyVPN.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"[wg-easy官网][https://github.com/wg-easy/wg-easy] 1、创建docker-compose.yml文件，这种方式安装基础环境要安装docker和docker-compose，记得将服务器的IP映射到外网，映射端口为51820 version: '3' services: wg-easy: image: weejewel/wg-easy #镜像名称 container_name: wg-easy #容器名称 environment: - WG_HOST=115.238.65.36 #公网IP - PASSWORD=62352744aa??aa #默认登录密码 - WG_DEFAULT_ADDRESS=192.168.21.x #默认生成的网段,需要写成公司内部的网段，最好是单独分配一个网段给 - WG_DEFAULT_DNS=192.168.128.4 #网络的dns - WG_ALLOWED_IPS=192.168.127.0/24, 192.168.128.0/24,192.168.207.0/24 #允许那些公司内部网段被访问 - WG_PERSISTENT_KEEPALIVE=25 #自动重连 - WG_DEVICE=wg-easy_default #服务器网卡名称（这个地方要填写docker的网络名称） volumes: - /home/mes/wg-easy:/etc/wireguard #配置文件保存的位置 ports: - \\\"51820:51820/udp\\\" #vpn端口 - \\\"51821:51821/tcp\\\" #连接客户端接口 cap_add: - NET_ADMIN - SYS_MODULE sysctls: - net.ipv4.conf.all.src_valid_mark=1 #允许IP转发 - net.ipv4.ip_forward=1 restart: always #容器自动重启\"},\"headers\":[{\"level\":3,\"title\":\"[wg-easy官网][https://github.com/wg-easy/wg-easy]\",\"slug\":\"wg-easy官网-https-github-com-wg-easy-wg-easy\",\"link\":\"#wg-easy官网-https-github-com-wg-easy-wg-easy\",\"children\":[]}],\"readingTime\":{\"minutes\":1.86,\"words\":558},\"filePathRelative\":\"posts/软件部署/wg-easyVPN.md\",\"excerpt\":\"<h3> [wg-easy官网][https://github.com/wg-easy/wg-easy]</h3>\\n<h4> 1、<strong>创建docker-compose.yml文件，这种方式安装基础环境要安装docker和docker-compose</strong>，记得将服务器的IP映射到外网，映射端口为51820</h4>\\n<div class=\\\"language-yaml line-numbers-mode\\\" data-ext=\\\"yml\\\"><pre class=\\\"language-yaml\\\"><code><span class=\\\"token key atrule\\\">version</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'3'</span>\\n<span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">wg-easy</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">image</span><span class=\\\"token punctuation\\\">:</span> weejewel/wg<span class=\\\"token punctuation\\\">-</span>easy <span class=\\\"token comment\\\">#镜像名称</span>\\n    <span class=\\\"token key atrule\\\">container_name</span><span class=\\\"token punctuation\\\">:</span> wg<span class=\\\"token punctuation\\\">-</span>easy <span class=\\\"token comment\\\">#容器名称</span>\\n    <span class=\\\"token key atrule\\\">environment</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> WG_HOST=115.238.65.36 <span class=\\\"token comment\\\">#公网IP</span>\\n      <span class=\\\"token punctuation\\\">-</span> PASSWORD=62352744aa<span class=\\\"token punctuation\\\">?</span><span class=\\\"token punctuation\\\">?</span>aa <span class=\\\"token comment\\\">#默认登录密码</span>\\n      <span class=\\\"token punctuation\\\">-</span> WG_DEFAULT_ADDRESS=192.168.21.x <span class=\\\"token comment\\\">#默认生成的网段,需要写成公司内部的网段，最好是单独分配一个网段给</span>\\n      <span class=\\\"token punctuation\\\">-</span> WG_DEFAULT_DNS=192.168.128.4  <span class=\\\"token comment\\\">#网络的dns</span>\\n      <span class=\\\"token punctuation\\\">-</span> WG_ALLOWED_IPS=192.168.127.0/24<span class=\\\"token punctuation\\\">,</span> 192.168.128.0/24<span class=\\\"token punctuation\\\">,</span>192.168.207.0/24 <span class=\\\"token comment\\\">#允许那些公司内部网段被访问</span>\\n      <span class=\\\"token punctuation\\\">-</span> WG_PERSISTENT_KEEPALIVE=25 <span class=\\\"token comment\\\">#自动重连</span>\\n      <span class=\\\"token punctuation\\\">-</span> WG_DEVICE=wg<span class=\\\"token punctuation\\\">-</span>easy_default <span class=\\\"token comment\\\">#服务器网卡名称（这个地方要填写docker的网络名称）</span>\\n    <span class=\\\"token key atrule\\\">volumes</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> /home/mes/wg<span class=\\\"token punctuation\\\">-</span>easy<span class=\\\"token punctuation\\\">:</span>/etc/wireguard <span class=\\\"token comment\\\">#配置文件保存的位置</span>\\n    <span class=\\\"token key atrule\\\">ports</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token string\\\">\\\"51820:51820/udp\\\"</span> <span class=\\\"token comment\\\">#vpn端口</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token string\\\">\\\"51821:51821/tcp\\\"</span> <span class=\\\"token comment\\\">#连接客户端接口</span>\\n    <span class=\\\"token key atrule\\\">cap_add</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> NET_ADMIN\\n      <span class=\\\"token punctuation\\\">-</span> SYS_MODULE\\n    <span class=\\\"token key atrule\\\">sysctls</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> net.ipv4.conf.all.src_valid_mark=1 <span class=\\\"token comment\\\">#允许IP转发</span>\\n      <span class=\\\"token punctuation\\\">-</span> net.ipv4.ip_forward=1\\n    <span class=\\\"token key atrule\\\">restart</span><span class=\\\"token punctuation\\\">:</span> always <span class=\\\"token comment\\\">#容器自动重启</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
