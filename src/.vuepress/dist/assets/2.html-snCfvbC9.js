import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,d as t}from"./app-af1K1DCR.js";const p={},e=t(`<h1 id="将数据求和存入数组中" tabindex="-1"><a class="header-anchor" href="#将数据求和存入数组中" aria-hidden="true">#</a> 将数据求和存入数组中</h1><h4 id="将数据求和存入数组中-在返回给前端整个代码和步骤" tabindex="-1"><a class="header-anchor" href="#将数据求和存入数组中-在返回给前端整个代码和步骤" aria-hidden="true">#</a> 将数据求和存入数组中，在返回给前端整个代码和步骤:</h4><h3 id="_1、创建接口" tabindex="-1"><a class="header-anchor" href="#_1、创建接口" aria-hidden="true">#</a> 1、创建接口</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token doc-comment comment">/**
     * <span class="token keyword">@return</span> 根据缺陷名称、时间、类型查出数据列表
     * <span class="token keyword">@param</span> <span class="token parameter">flawRespVO</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token class-name">ModuleProcessingFlawResultVO</span> <span class="token function">getModuleProcessingFlawListByName</span><span class="token punctuation">(</span><span class="token class-name">ModuleProcessingFlawRespVO</span> flawRespVO<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、创建一个新的自定义类-用于存储缺陷数据和总重量" tabindex="-1"><a class="header-anchor" href="#_2、创建一个新的自定义类-用于存储缺陷数据和总重量" aria-hidden="true">#</a> 2、<em>创建一个新的自定义类，用于存储缺陷数据和总重量</em></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ModuleProcessingFlawResultVO</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawDO</span><span class="token punctuation">&gt;</span></span> flawDOList<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> totalFlawZzlMap<span class="token punctuation">;</span> <span class="token comment">// 使用LinkedHashMap保持排序</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawArrayVO</span><span class="token punctuation">&gt;</span></span> flawDataList<span class="token punctuation">;</span> <span class="token comment">// 新的字段，用于存储数据的数组形式</span>


    <span class="token keyword">public</span> <span class="token class-name">ModuleProcessingFlawResultVO</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawDO</span><span class="token punctuation">&gt;</span></span> flawDOList<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> totalFlawZzlMap<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawArrayVO</span><span class="token punctuation">&gt;</span></span> flawDataList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>flawDOList <span class="token operator">=</span> flawDOList<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>totalFlawZzlMap <span class="token operator">=</span> totalFlawZzlMap<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawDO</span><span class="token punctuation">&gt;</span></span> <span class="token function">getFlawDOList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> flawDOList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTotalFlawZzlMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> totalFlawZzlMap<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawArrayVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">getFlawDataList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> flawDataList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFlawDataList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawArrayVO</span><span class="token punctuation">&gt;</span></span> flawDataList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>flawDataList <span class="token operator">=</span> flawDataList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、将数据存入数组" tabindex="-1"><a class="header-anchor" href="#_3、将数据存入数组" aria-hidden="true">#</a> 3、<em>将数据存入数组</em></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ModuleProcessingFlawArrayVO</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> flawName<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> totalWeight<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ModuleProcessingFlawArrayVO</span><span class="token punctuation">(</span><span class="token class-name">String</span> flawName<span class="token punctuation">,</span> <span class="token keyword">double</span> totalWeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>flawName <span class="token operator">=</span> flawName<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>totalWeight <span class="token operator">=</span> totalWeight<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getFlawName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> flawName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getTotalWeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> totalWeight<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、实现接口-接口实现根据时间类型-去数据库查询这个时间段的数据-在将数据的总重量字段求和" tabindex="-1"><a class="header-anchor" href="#_4、实现接口-接口实现根据时间类型-去数据库查询这个时间段的数据-在将数据的总重量字段求和" aria-hidden="true">#</a> 4、实现接口(接口实现根据时间类型，去数据库查询这个时间段的数据，在将数据的总重量字段求和)</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token annotation punctuation">@Override</span>
 <span class="token keyword">public</span> <span class="token class-name">ModuleProcessingFlawResultVO</span> <span class="token function">getModuleProcessingFlawListByName</span><span class="token punctuation">(</span><span class="token class-name">ModuleProcessingFlawRespVO</span> flawRespVO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> nameFlaw <span class="token operator">=</span> flawRespVO<span class="token punctuation">.</span><span class="token function">getFlaw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取前端传回来的缺陷名称</span>
        <span class="token class-name">String</span> nameType <span class="token operator">=</span> flawRespVO<span class="token punctuation">.</span><span class="token function">getFlawType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//类型</span>
        <span class="token class-name">LocalDateTime</span> nameDateTime <span class="token operator">=</span> flawRespVO<span class="token punctuation">.</span><span class="token function">getFlawSj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//时间</span>
        <span class="token comment">//获取当前时间</span>
        <span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//创建构造查询</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawDO</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//不传合金时不需要缺陷的显示</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nameFlaw <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>nameFlaw<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;flaw&quot;</span><span class="token punctuation">,</span> nameFlaw<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawDO</span><span class="token punctuation">&gt;</span></span> flawDOList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 根据传回的类型执行相应的查询</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;本季度&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nameType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//对本季度做计算</span>
            <span class="token comment">// 计算本季度的开始日期和结束日期</span>
            <span class="token class-name">LocalDateTime</span> startOfQuarter <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">withMonth</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>localDateTime<span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withDayOfMonth</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withHour</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withMinute</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withSecond</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">LocalDateTime</span> endOfQuarter <span class="token operator">=</span> startOfQuarter<span class="token punctuation">.</span><span class="token function">plusMonths</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minusSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 清空之前的查询条件</span>
            queryWrapper<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 添加时间范围限制</span>
            queryWrapper<span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span><span class="token string">&quot;flaw_sj&quot;</span><span class="token punctuation">,</span> startOfQuarter<span class="token punctuation">,</span> endOfQuarter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;本年度&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nameType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queryWrapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">&quot;YEAR(flaw_sj) = YEAR({0})&quot;</span><span class="token punctuation">,</span> localDateTime<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;本月&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nameType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queryWrapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">&quot;YEAR(flaw_sj) = YEAR({0}) AND MONTH(flaw_sj) = MONTH({0})&quot;</span><span class="token punctuation">,</span> localDateTime<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
        <span class="token comment">// TODO 添加时间范围限制</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nameDateTime <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;flaw_sj&quot;</span><span class="token punctuation">,</span> nameDateTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 执行查询</span>
        flawDOList <span class="token operator">=</span> moduleProcessingFlawMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 过滤列表，仅包括特定的缺陷，并计算总的flawZzl</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawDO</span><span class="token punctuation">&gt;</span></span> filteredFlawDOList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 使用Map来跟踪不同缺陷名称的总重量</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> totalFlawZzlMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawArrayVO</span><span class="token punctuation">&gt;</span></span> flawDataList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 新的List，用于存储数据的数组形式</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ModuleProcessingFlawDO</span> flawDO <span class="token operator">:</span> flawDOList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> flawName <span class="token operator">=</span> flawDO<span class="token punctuation">.</span><span class="token function">getFlaw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 假设 &quot;flaw&quot; 是包含缺陷名称的字段</span>
            <span class="token keyword">double</span> flawZzl <span class="token operator">=</span> flawDO<span class="token punctuation">.</span><span class="token function">getFlawZzl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 假设 &quot;flawZzl&quot; 是包含flawZzl值的字段</span>

            <span class="token comment">// 检查缺陷名称是否与特定的缺陷匹配</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;板形不良&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>flawName<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;针孔超&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>flawName<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;厚差&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>flawName<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;杠印&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>flawName<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;辊印&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>flawName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                totalFlawZzlMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>flawName<span class="token punctuation">,</span> totalFlawZzlMap<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>flawName<span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token operator">+</span> flawZzl<span class="token punctuation">)</span><span class="token punctuation">;</span>
                flawDataList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ModuleProcessingFlawArrayVO</span><span class="token punctuation">(</span>flawName<span class="token punctuation">,</span> flawZzl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将数据添加到数组形式的List中</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 将汇总的总重量排序（从大到小）</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> sortedTotalFlawZzlMap <span class="token operator">=</span> totalFlawZzlMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span><span class="token function">comparingByValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reversed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token operator">::</span><span class="token function">getKey</span><span class="token punctuation">,</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token operator">::</span><span class="token function">getValue</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> e1<span class="token punctuation">,</span> <span class="token class-name">LinkedHashMap</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 将汇总的总重量赋给TotalWeight</span>
        <span class="token keyword">double</span> totalWeight <span class="token operator">=</span> sortedTotalFlawZzlMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToDouble</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token operator">::</span><span class="token function">doubleValue</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        flawRespVO<span class="token punctuation">.</span><span class="token function">setTotalWeight</span><span class="token punctuation">(</span>totalWeight<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 封装结果到自定义对象</span>
        <span class="token class-name">ModuleProcessingFlawResultVO</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModuleProcessingFlawResultVO</span><span class="token punctuation">(</span>filteredFlawDOList<span class="token punctuation">,</span> totalFlawZzlMap<span class="token punctuation">,</span> flawDataList<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 返回自定义对象</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、接口代码" tabindex="-1"><a class="header-anchor" href="#_5、接口代码" aria-hidden="true">#</a> 5、接口代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/flaws&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;根据缺陷名称获取数据列表&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;@ss.hasPermission(&#39;catl:module-processing-flaw:flaws&#39;)&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">CommonResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawResultVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">getModuleProcessingFlawListByName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">ModuleProcessingFlawRespVO</span> flawRespVO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ModuleProcessingFlawResultVO</span> result <span class="token operator">=</span> moduleProcessingFlawService<span class="token punctuation">.</span><span class="token function">getModuleProcessingFlawListByName</span><span class="token punctuation">(</span>flawRespVO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 在此处将数据存储到数组中</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ModuleProcessingFlawArrayVO</span><span class="token punctuation">&gt;</span></span> flawDataList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> totalFlawZzlMap <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getTotalFlawZzlMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> totalFlawZzlMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            flawDataList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ModuleProcessingFlawArrayVO</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 设置数据数组到结果对象</span>
        result<span class="token punctuation">.</span><span class="token function">setFlawDataList</span><span class="token punctuation">(</span>flawDataList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","2.html.vue"]]);export{r as default};
